# 세이 악성코드 이미지화 코드(주석.ver)
import os,sys
import numpy as np
from PIL import Image

def getBinaryData(filename):
  image=np.zeros((256,256)) ## 256사이즈만 받을 예정, 0으로 채운 256사이즈의 배열 만듦
  with open (filename) as file: ##C:\Users\ssh09\Desktop\0aSTGBVRXeJhx5OcpsgC.asm 이 파일경로를 파일로 가져오기
    rectype = np.dtype(np.int8) ## 부호 있는 8비트로 변환
    binaryValues = np.fromfile(file, dtype=rectype) ##binaryValues는 위의 변수 file을 8비트 파일로 변환한것

    i,j,p=0,0,0 ## image 채우기 위한 변수
    for c in binaryValues: ## image 채우기 위한 반복문 (binaryValues가 끝날때까지 binaryValues를 하나씩 c에 집어넣는 반복문)
        if(i<256):
            if(j<256):
                image[i][j]=c ## 2차원 배열로 만들어 점 찍기
                j+=1
            elif(j==256):
                j=0
                i+=1
        elif(i==256):
            i=0
    
    print(image)
    return image ## 점찍은 배열을 리턴

def createGreyScaleImageSpecificWith(dataSet, outputfilename):  ## dataSet에는 위의 리턴 값 image가 들어가있음
  
  img=Image.fromarray(dataSet) ##넘파이배열로 돼있는 이미지배열을 PIL이미지로 변환
  img2= img.convert('L') ## L은 그레이스케일로


  imagename = outputfilename + ".png"
  img2.save(imagename)

  ##img2=img2.resize((256,256),Image.ANTIALIAS) ##resize시 깨지지 않게 저장해주는 인자 (Image.ANTIALIAS)

  img2.show()
  print(imagename+" Greyscale image created")

if __name__=="__main__": ## songtest.py C:\Users\ssh09\Desktop\0aSTGBVRXeJhx5OcpsgC.asm
  file_full_path=sys.argv[1]
  path=os.path.dirname(file_full_path)
  base_name=os.path.splitext(os.path.basename(file_full_path))[0]
  outputFilename=os.path.join(path,base_name)

  binaryData=getBinaryData(file_full_path)
  createGreyScaleImageSpecificWith(binaryData, outputFilename)